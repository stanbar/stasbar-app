/*
 * Copyright 2019 Stanislaw stasbar Baranski
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *
 *          __             __              
 *    _____/ /_____ ______/ /_  ____ ______
 *   / ___/ __/ __ `/ ___/ __ \/ __ `/ ___/
 *  (__  ) /_/ /_/ (__  ) /_/ / /_/ / /    
 * /____/\__/\__,_/____/_.___/\__,_/_/     
 *            stasbar@stasbar.com         
 */

plugins {
  id 'com.android.application'
  id 'kotlin-android'
  id 'kotlin-android-extensions'
  id 'com.github.triplet.play' version '2.1.0'
}

android {
  compileSdkVersion versions.versionSdk

  defaultConfig {
    minSdkVersion versions.minSdk
    targetSdkVersion versions.versionSdk
    applicationId 'com.stasbar.app.android'
    versionCode 9
    versionName '1.0.9'
    testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
  }
  signingConfigs {
    release {
      keyAlias 'stasbar-app'
      keyPassword STASBAR_APP_KEYSTORE_PASSWORD
      storeFile file(STASBAR_APP_KEYSTORE_PATH)
      storePassword STASBAR_APP_KEYSTORE_PASSWORD
    }
  }
  buildTypes {
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release
    }
    releaseDebug {
      debuggable true
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  packagingOptions {
    exclude 'META-INF/common.kotlin_module'
  }
  dynamicFeatures = [":android:notifications"]

}

//https://github.com/Triple-T/gradle-play-publisher
play {
  serviceAccountCredentials = file(STASBAR_GOOGLE_PLAY_API_KEY_PATH)
  defaultToAppBundles = true
  track = "production"
}

dependencies {
  implementation project(':common')
  implementation fileTree(include: ['*.jar'], dir: 'libs')
  // Kotlin
  api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"
  api "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"

  // AndroidX
  api "androidx.lifecycle:lifecycle-extensions:2.0.0"
  api 'androidx.appcompat:appcompat:1.1.0-rc01'
  api 'androidx.core:core-ktx:1.2.0-alpha02'
  api 'androidx.legacy:legacy-support-v4:1.0.0'
  api 'androidx.constraintlayout:constraintlayout:1.1.3'
  api "androidx.work:work-runtime-ktx:2.1.0-rc01"
  // Google UI
  api 'com.google.android.material:material:1.0.0'
  api 'com.google.android:flexbox:1.1.0'
  api "com.google.android.play:core:1.6.1"
  api 'com.google.android.instantapps:instantapps:1.1.0'

  // Koin
  api "org.koin:koin-androidx-scope:${versions.koin}"
  api "org.koin:koin-androidx-viewmodel:${versions.koin}"

  // Retrofit2
  implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
  implementation "com.squareup.retrofit2:converter-moshi:${versions.retrofit}"
  implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"

  //  Misc
  api 'com.squareup.picasso:picasso:2.71828'
  api "commons-codec:commons-codec:1.11"
  api 'com.jakewharton.timber:timber:4.7.1'

  testImplementation 'junit:junit:4.12'
  androidTestImplementation 'androidx.test:runner:1.2.0'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
