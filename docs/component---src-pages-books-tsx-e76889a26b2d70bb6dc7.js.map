{"version":3,"sources":["webpack:///./src/components/Books/BookView.tsx","webpack:///./src/pages/books.tsx"],"names":["Component","Books","state","books","Array","loading","componentDidMount","this","fetchBooks","render","classes","props","className","root","container","spacing","item","sm","variant","map","book","key","hash","xs","md","lg","style","height","width","src","imageUrl","alt","title","img","subtitle","author","Api","fetchAllBooks","setState","console","error","withStyles","theme","createStyles","marginLeft","unit","marginRight","breakpoints","up","display","flexWrap","flexGrow","flexDirection","justifyContent","overflow","padding"],"mappings":"8NA+BsCA,YCQtC,IA8BMC,E,4JAEGC,MAAqB,CAC1BC,MAAO,IAAIC,MACXC,SAAS,G,oHAGXC,kBAAA,WACEC,KAAKC,c,EAGAC,OAAP,WAAgB,IACPC,EAAWH,KAAKI,MAAhBD,QADO,EAEWH,KAAKL,MAAvBC,EAFO,EAEPA,MAAOE,EAFA,EAEAA,QAOd,OACE,yBAAKO,UAAWF,EAAQG,MACtB,kBAAC,IAAD,CAAMC,WAAW,EAAMC,QAAS,IAC7BV,GAAW,kBAAC,IAAD,CAAMW,MAAM,EAAMC,GAAI,IAC9B,kBAAC,IAAD,CAAYC,QAAQ,MAApB,eAGHf,EAAMgB,KAAI,SAACC,GAAD,OACT,kBAAC,IAAD,CAAMC,IAAKD,EAAKE,KAAMN,MAAM,EAAMO,GAAI,EAAGN,GAAI,EAAGO,GAAI,EAAGC,GAAI,EAAGC,MAAO,CAACC,OAAQ,OAAQC,MAAO,SAC3F,kBAAC,IAAD,KACE,yBAAKC,IAAKT,EAAKU,SAAUC,IAAKX,EAAKY,MAAOpB,UAAWF,EAAQuB,MAC7D,kBAAC,IAAD,CACED,MAAOZ,EAAKY,MACZE,SAAU,qCAAWd,EAAKe,kB,EAW5B3B,WAAd,sHAEgC4B,IAAIC,iBAFpC,OAEUlC,EAFV,OAGII,KAAK+B,SAAS,CAACnC,QAAOE,SAAS,IAHnC,gDAKIkC,QAAQC,MAAR,MACAjC,KAAK+B,SAAS,CAACjC,SAAS,IAN5B,yD,GA5CkBL,aAuDLyC,gCArFA,SAACC,GAAD,aAAkBC,uBAAa,CAC5C9B,MAAI,GACFe,MAAO,OACPgB,WAAiC,EAArBF,EAAM3B,QAAQ8B,KAC1BC,YAAkC,EAArBJ,EAAM3B,QAAQ8B,MAHzB,EAIDH,EAAMK,YAAYC,GAAG,KAA4B,EAArBN,EAAM3B,QAAQ8B,KAAW,IAAK,CACzDjB,MAAO,KACPgB,WAAY,OACZE,YAAa,QAPb,EAUFG,QAAS,OAVP,EAWFC,SAAU,OAXR,EAYFC,SAAU,EAZR,EAaFC,cAAe,SAbb,EAcFC,eAAgB,eAdd,EAeFC,SAAU,SAfR,EAgBFC,QAAiC,EAArBb,EAAM3B,QAAQ8B,KAhBxB,UAkBJZ,IAAK,CACHL,MAAO,OACPD,OAAQ,YAgEGc,CAAmBxC","file":"component---src-pages-books-tsx-e76889a26b2d70bb6dc7.js","sourcesContent":["/*\n * Copyright 2019 Stanislaw stasbar Baranski\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *          __             __\n *    _____/ /_____ ______/ /_  ____ ______\n *   / ___/ __/ __ `/ ___/ __ \\/ __ `/ ___/\n *  (__  ) /_/ /_/ (__  ) /_/ / /_/ / /\n * /____/\\__/\\__,_/____/_.___/\\__,_/_/\n *            stasbar@stasbar.com\n */\n\nimport React, {Component} from \"react\";\nimport Book from \"../../models/Book\";\n\ninterface IBookViewProps {\n  book: Book;\n}\n\nexport default class BookView extends Component<IBookViewProps, {}> {\n  public render() {\n    const {book} = this.props;\n    return (\n      <div id={book.hash}>\n        <h3>Title: {book.title}</h3>\n        <h3>Author: {book.author}</h3>\n        <h3>Rating: {book.rating}</h3>\n      </div>\n    );\n  }\n}\n","/*\n * Copyright 2019 Stanislaw stasbar Baranski\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *          __             __\n *    _____/ /_____ ______/ /_  ____ ______\n *   / ___/ __/ __ `/ ___/ __ \\/ __ `/ ___/\n *  (__  ) /_/ /_/ (__  ) /_/ / /_/ / /\n * /____/\\__/\\__,_/____/_.___/\\__,_/_/\n *            stasbar@stasbar.com\n */\n\nimport {\n  createStyles,\n  Grid,\n  GridListTile,\n  GridListTileBar,\n  Theme,\n  Typography,\n  withStyles,\n  WithStyles\n} from \"@material-ui/core\";\nimport React, {Component} from \"react\";\nimport Api from \"../Api\";\nimport Book from \"../models/Book\";\nimport BookView from \"../components/Books/BookView\";\n\nconst styles = (theme: Theme) => createStyles({\n  root: {\n    width: 'auto',\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\n      width: 1100,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flexGrow: 1,\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    padding: `${theme.spacing.unit * 8}px 0`,\n  },\n  img: {\n    width: \"100%\",\n    height: \"auto\"\n  }\n});\n\ninterface IBooksState {\n  books: Book[];\n  loading: boolean;\n}\n\nclass Books extends Component<WithStyles<typeof styles>, IBooksState> {\n\n  public state: IBooksState = {\n    books: new Array<Book>(),\n    loading: true\n  };\n\n  componentDidMount(): void {\n    this.fetchBooks();\n  }\n\n  public render() {\n    const {classes} = this.props;\n    const {books, loading} = this.state;\n    const bookView = (props: any) =>\n      <BookView\n        {...props}\n        book={books.find((book: Book) => book.hash === props.match.params.hash)}\n      />;\n\n    return (\n      <div className={classes.root}>\n        <Grid container={true} spacing={16}>\n          {loading && <Grid item={true} sm={12}>\n              <Typography variant=\"h5\">Loading...</Typography>\n          </Grid>\n          }\n          {books.map((book: Book) =>\n            <Grid key={book.hash} item={true} xs={4} sm={3} md={3} lg={2} style={{height: \"auto\", width: \"100%\"}}>\n              <GridListTile>\n                <img src={book.imageUrl} alt={book.title} className={classes.img}/>\n                <GridListTileBar\n                  title={book.title}\n                  subtitle={<span>by: {book.author}</span>}\n                />\n              </GridListTile>\n            </Grid>\n          )}\n\n        </Grid>\n      </div>\n    );\n  }\n\n  private async fetchBooks() {\n    try {\n      const books: Book[] = await Api.fetchAllBooks();\n      this.setState({books, loading: false});\n    } catch (e) {\n      console.error(e);\n      this.setState({loading: false});\n    }\n  }\n}\n\nexport default withStyles(styles)(Books)\n"],"sourceRoot":""}