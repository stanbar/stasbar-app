{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Card/Card.js","webpack:///./src/pages/quotes.tsx"],"names":["props","ref","classes","className","_props$raised","raised","other","Paper","root","elevation","withStyles","overflow","name","Quotes","Component","state","quotes","Array","loading","componentDidMount","this","fetchQuotes","render","Grid","item","sm","Typography","variant","map","quote","cardQuote","key","hash","text","author","Api","fetchAllQuotes","setState","console","error","theme","createStyles","minHeight","width","marginLeft","spacing","marginRight","breakpoints","up","display","flexWrap","flexGrow","flexDirection","justifyContent","padding","textDecoration","margin"],"mappings":"uQAYI,EAAO,cAAiB,SAAcA,EAAOC,GAC/C,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAgBJ,EAAMK,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAQ,YAAyBN,EAAO,CAAC,UAAW,YAAa,WAErE,OAAoB,gBAAoBO,EAAA,EAAO,YAAS,CACtDJ,UAAW,YAAKD,EAAQM,KAAML,GAC9BM,UAAWJ,EAAS,EAAI,EACxBJ,IAAKA,GACJK,OAGU,SAAAI,EAAA,GApBK,CAElBF,KAAM,CACJG,SAAU,WAiBoB,CAChCC,KAAM,WADO,CAEZ,G,qIC6CH,MAAMC,UAAeC,YAAmD,mCAC/DC,MAAsB,CAC3BC,OAAQ,IAAIC,MACZC,SAAS,GAGXC,oBACEC,KAAKC,cAGAC,SAAS,MACNpB,EAAYkB,KAAKpB,MAAjBE,QADM,EAEckB,KAAKL,MAAzBC,EAFM,EAENA,OAAQE,EAFF,EAEEA,QAChB,OACE,uBAAKf,UAAWD,EAAQM,MACrBU,GACC,gBAACK,EAAA,EAAD,CAAMC,MAAM,EAAMC,GAAI,IACpB,gBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,eAGHX,EAAOY,IAAKC,GACX,gBAAC,EAAD,CAAM1B,UAAWD,EAAQ4B,UAAWC,IAAKF,EAAMG,MAC7C,gBAACN,EAAA,EAAD,CAAYC,QAAQ,SACjBE,EAAMI,KADT,KACiBJ,EAAMK,WAQnBb,cAAc,I,EAAA,c,EAAA,uHAEMc,IAAIC,iBAFV,OAElBpB,EAFkB,OAGxB,EAAKqB,SAAS,CAAErB,SAAQE,SAAS,IAHT,gDAKxBoB,QAAQC,MAAR,MACA,EAAKF,SAAS,CAAEnB,SAAS,IAND,wD,kLAWfR,sBA7EC8B,GACdC,YAAa,CACXjC,KAAM,CACJkC,UAAW,QACXC,MAAO,OACPC,WAAYJ,EAAMK,QAAQ,GAC1BC,YAAaN,EAAMK,QAAQ,GAC3B,CAACL,EAAMO,YAAYC,GAAG,KAAOR,EAAMK,QAAQ,KAAM,CAC/CF,MAAO,KACPC,WAAY,OACZE,YAAa,QAGfG,QAAS,OACTC,SAAU,OACVC,SAAU,EACVC,cAAe,SACfC,eAAgB,eAChB1C,SAAU,SACV2C,QAAYd,EAAMK,QAAQ,GAAnB,QAETf,UAAW,CACTyB,eAAgB,OAChBC,OAAWhB,EAAMK,QAAQ,GAAnB,OACNS,QAAYd,EAAMK,QAAQ,GAAnB,QAqDEnC,CAAmBG","file":"component---src-pages-quotes-tsx-0e19bf553950f908c837.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","/*\n * Copyright 2019 Stanislaw stasbar Baranski\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *          __             __\n *    _____/ /_____ ______/ /_  ____ ______\n *   / ___/ __/ __ `/ ___/ __ \\/ __ `/ ___/\n *  (__  ) /_/ /_/ (__  ) /_/ / /_/ / /\n * /____/\\__/\\__,_/____/_.___/\\__,_/_/\n *            stasbar@stasbar.com\n */\n\nimport {\n  Card,\n  createStyles,\n  Grid,\n  Theme,\n  Typography,\n  WithStyles,\n  withStyles\n} from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { Component } from \"react\";\nimport Api from \"../Api\";\nimport Quote from \"../models/Quote\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      minHeight: \"100vh\",\n      width: \"auto\",\n      marginLeft: theme.spacing(3),\n      marginRight: theme.spacing(3),\n      [theme.breakpoints.up(1100 + theme.spacing(6))]: {\n        width: 1100,\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      },\n\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      flexGrow: 1,\n      flexDirection: \"column\",\n      justifyContent: \"space-around\",\n      overflow: \"hidden\",\n      padding: `${theme.spacing(8)}px 0`\n    },\n    cardQuote: {\n      textDecoration: \"none\",\n      margin: `${theme.spacing(1)}px 0`,\n      padding: `${theme.spacing(1)}px`\n    }\n  });\n\ninterface IQuotesProps {}\n\ninterface IQuotesState {\n  quotes: Quote[];\n  loading: boolean;\n}\n\nclass Quotes extends Component<WithStyles<typeof styles>, IQuotesState> {\n  public state: IQuotesState = {\n    quotes: new Array<Quote>(),\n    loading: true\n  };\n\n  componentDidMount(): void {\n    this.fetchQuotes();\n  }\n\n  public render() {\n    const { classes } = this.props;\n    const { quotes, loading } = this.state;\n    return (\n      <div className={classes.root}>\n        {loading && (\n          <Grid item={true} sm={12}>\n            <Typography variant=\"h5\">Loading...</Typography>\n          </Grid>\n        )}\n        {quotes.map((quote: Quote) => (\n          <Card className={classes.cardQuote} key={quote.hash}>\n            <Typography variant=\"body1\">\n              {quote.text} ~{quote.author}\n            </Typography>\n          </Card>\n        ))}\n      </div>\n    );\n  }\n\n  private async fetchQuotes() {\n    try {\n      const quotes: Quote[] = await Api.fetchAllQuotes();\n      this.setState({ quotes, loading: false });\n    } catch (e) {\n      console.error(e);\n      this.setState({ loading: false });\n    }\n  }\n}\n\nexport default withStyles(styles)(Quotes);\n"],"sourceRoot":""}